spring.profiles.active=prod
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${GOOGLE_SMTP_USERNAME}
spring.mail.password=${GOOGLE_SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

hibernate.search.default.indexmanager=elasticsearch
hibernate.search.default.elasticsearch.index_schema_management_strategy=drop-and-create
hibernate.search.default.elasticsearch.required_index_status=yellow

#spring.session.store-type=jdbc
#spring.session.jdbc.initialize-schema=always

# One last attempt to get Heroku under control. If this fails, I'm posting
# Learned via https://stackoverflow.com/questions/25573034/spring-boot-how-do-i-set-jdbc-pool-properties-like-maximum-number-of-connection
# and https://stackoverflow.com/questions/44491257/how-to-reduce-spring-boot-memory-usage
# 10: max Heroku gives us, as per logs
spring.datasource.max-active=10
server.tomcat.max-threads=1
